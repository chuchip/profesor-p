<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on Documentacion en español</title>
    <link>http://www.profesor-p.com/categories/web/</link>
    <description>Recent content in web on Documentacion en español</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <lastBuildDate>Tue, 06 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://www.profesor-p.com/categories/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generar paginas Web estáticas dinámicamente</title>
      <link>http://www.profesor-p.com/2018/11/28/generar-paginas-web-estaticas-dinamicamente/</link>
      <pubDate>Wed, 28 Nov 2018 12:32:50 +0000</pubDate>
      
      <guid>http://www.profesor-p.com/2018/11/28/generar-paginas-web-estaticas-dinamicamente/</guid>
      <description>&lt;p&gt;Vamos a  hablar de &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. Este un software  permite crear sitios web estáticos pero trabajando &lt;em&gt;casi&lt;/em&gt; como si fueran dinámicos. Para ello podremos usar diferentes plantillas que configuraremos, para luego añadir entradas y contenido dinámico fácilmente.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Crear pagina web gratuita en GitHub</title>
      <link>http://www.profesor-p.com/2018/12/05/crear-pagina-web-gratuita-en-github/</link>
      <pubDate>Wed, 05 Dec 2018 10:32:08 +0000</pubDate>
      
      <guid>http://www.profesor-p.com/2018/12/05/crear-pagina-web-gratuita-en-github/</guid>
      <description>&lt;p&gt;En esta entrada explicare como crear una página  web gratuita  en &lt;a href=&#34;https://www.github.com&#34;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Estas  páginas deben ser estáticas  pero no hay limitaciones de ancho de banda, numero de ficheros y por supuesto no meterán publicidad en vuestra pagina web. Ademas, utilizara  https y podreis usar un dominio propio, si lo habeis comprado con anterioridad. Aclarar que un dominio se puede registrar por solo un euro al año 😉&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>La clase RestTemplate</title>
      <link>http://www.profesor-p.com/2019/08/03/trabajando-con-la-clase-resttemplate/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.profesor-p.com/2019/08/03/trabajando-con-la-clase-resttemplate/</guid>
      <description>Este será el primero de una serie de entradas sobre la clase RestTemplate de Spring.
Con los diferentes métodos de la clase se realizan peticiones HTTP fácilmente, produciéndose la serialización y deserialización de los objetos de una manera transparente. Es una gran alternativa dada por Spring sobre otras librerías ya existentes en el mercado.
Como siempre tenéis el proyecto sobre el que esta basado este artículo en: https://github.com/chuchip/RestTemplateExample
RestTemplate esta en el core de Spring por lo cual no es necesario instalar ninguna dependencia.</description>
    </item>
    
    <item>
      <title>La Clase RestTemplate - 2</title>
      <link>http://www.profesor-p.com/clase-resttemplate-2/</link>
      <pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.profesor-p.com/clase-resttemplate-2/</guid>
      <description>En la anterior entrada vimos como lanzar una petición HTTP contra un servidor externo, pero al lanzarla surgieron algunas dudas. Dos ya fueron resueltas así que continuemos resolviendo las siguientes.
3. Y si el servidor devuelve un OK, pero lo devuelto no es un objeto del tipo mandado, ¿ qué pasara ? Como hemos visto cuando se realiza la petición uno de los parámetros mandados es el objeto que se espera devolver.</description>
    </item>
    
    <item>
      <title>La Clase RestTemplate - 3</title>
      <link>http://www.profesor-p.com/clase-resttemplate-3/</link>
      <pubDate>Tue, 06 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://www.profesor-p.com/clase-resttemplate-3/</guid>
      <description>Esta es la tercera y última entrada sobre la clase RestTemplate. Puedes ver las anteriores entradas en Trabajando con la clase RestTemplate y en La clase RestTemplate-2.
En esta ocasión hablare sobre las funciones más utilizadas en esta clase y como usarlas.
Para más detalles visita la pagina oficial de Spring https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/client/RestTemplate.html.
Antes de enumerar como realizar las diferentes tipos de peticiones insistiré en que c siempre podremos recibir directamente el cuerpo el mensaje o un ResponseEntity.</description>
    </item>
    
    <item>
      <title>Estableciendo filtros en Spring</title>
      <link>http://www.profesor-p.com/2019/06/13/estableciendo-filtros-en-spring/</link>
      <pubDate>Thu, 13 Jun 2019 16:11:53 +0000</pubDate>
      
      <guid>http://www.profesor-p.com/2019/06/13/estableciendo-filtros-en-spring/</guid>
      <description>En esta entrada voy a hablar de como implementar filtros en Spring. Los filtros son de los que se pueden establecer cuando se recibe una petición HTTP. Es decir, suponiendo que tenemos un programa escuchando en unas URI, poder especificar que deseamos ejecutar algo antes de que las peticiones sea procesadas por el controlador.
Esto es muy útil si queremos que todas las peticiones cumplan un requisito, por ejemplo incluir una cabecera especifica.</description>
    </item>
    
  </channel>
</rss>