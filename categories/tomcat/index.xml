<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tomcat on Documentacion en español</title>
    <link>http://ww2.profesor-p.com/categories/tomcat/</link>
    <description>Recent content in Tomcat on Documentacion en español</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <lastBuildDate>Mon, 29 Oct 2018 08:49:12 +0000</lastBuildDate>
    
	<atom:link href="http://ww2.profesor-p.com/categories/tomcat/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring WebFlow con JSP – Configuración</title>
      <link>http://ww2.profesor-p.com/2018/10/29/spring-webflow-con-jsp-configuracion/</link>
      <pubDate>Mon, 29 Oct 2018 08:49:12 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/10/29/spring-webflow-con-jsp-configuracion/</guid>
      <description>Buenas, estudiantes. En este articulo intentare explicar como funciona Spring WebFlow y para ello, como siempre, lo haré desarrollando un programa que podéis descargar de https://github.com/chuchip/webflowExample
El programa simulara que entras a la página de un banco donde puedes realizar una transferencia de tus cuentas personales a otra. Para ello, primero deberás identificarte y según el usuario con el que te identifiques tendrás acceso a unas cuentas que a su vez disponen de un saldo establecido.</description>
    </item>
    
    <item>
      <title>Spring WebFlow con JSP</title>
      <link>http://ww2.profesor-p.com/2018/10/30/spring-webflow-con-jsp/</link>
      <pubDate>Tue, 30 Oct 2018 17:12:49 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/10/30/spring-webflow-con-jsp/</guid>
      <description>En el articulo anterior http://www.profesor-p.com/2018/10/29/spring-webflow-con-jsp-configuracion/ explicaba como configurar el programa para que Spring WebFlow funcionara. En este articulo explicare como hacer el flujo en si.
La página principal del programa no esta dentro de ningún flujo y sus peticiones son respondidas por Spring MVC, en la clase MyController, la cual podemos encontrar en el paquete profesorp.webflow.controller. Esta clase anotada con la etiqueta @Controller responde en la función indice1 a las peticiones de los recursos &amp;#8220;/&amp;#8221; e &amp;#8220;index&amp;#8221;</description>
    </item>
    
    <item>
      <title>Desarrollando aplicaciones Java EE en NetBeans 9</title>
      <link>http://ww2.profesor-p.com/2018/09/05/desarrollando-aplicaciones-java-ee-en-netbeans-9/</link>
      <pubDate>Wed, 05 Sep 2018 15:05:08 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/09/05/desarrollando-aplicaciones-java-ee-en-netbeans-9/</guid>
      <description>El recien salido NetBeans 9, es un excelente IDE, con soporte para Java 10 y 11, y con otra serie de características muy interesantes. Sin embargo, por temas de licencias con Oracle que es el dueño del antiguo NetBeans, solo tiene soporte para Java Standard Edition, no pudiendo, en teoría, hacer aplicaciones para Java EE.
Pero es solo en teoria, pues NetBeans 9, mantiene la compatibilidad con la versión 8.2, incluso a nivel de plugins.</description>
    </item>
    
    <item>
      <title>Aplicación en Spring REST y Angular – 4ª Parte</title>
      <link>http://ww2.profesor-p.com/2018/09/05/aplicacion-en-spring-rest-y-angular-4a-parte/</link>
      <pubDate>Wed, 05 Sep 2018 10:16:08 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/09/05/aplicacion-en-spring-rest-y-angular-4a-parte/</guid>
      <description>Continuo con la serie de artículos explicando una aplicación donde la parte de servidor esta creada con Java, apoyándose en el framework Spring y la parte del cliente usara Angular. Para la comunicación entre la aplicación usare peticiones REST, por supuesto utilizando el protocolo JSON.
En la anterior entrada empece a explicar como se desplegaría la aplicación y en que URLs se procesarían las diferentes peticiones. Ahora explicare como funcionan las diferentes peticiones.</description>
    </item>
    
    <item>
      <title>Aplicación en Spring REST y Angular – 3ª Parte</title>
      <link>http://ww2.profesor-p.com/2018/09/04/aplicacion-en-spring-rest-y-angular-3a-parte/</link>
      <pubDate>Tue, 04 Sep 2018 05:44:12 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/09/04/aplicacion-en-spring-rest-y-angular-3a-parte/</guid>
      <description>En esta entrada, continuare con la parte servidor, que ya comencé en el articulo anterior.
Voy a desarrollar la parte donde se responden a las peticiones REST. Para el que no sepa que es eso de REST, podéis empezar leyendo este articulo de la wikipedia, pero os podeis quedar con la idea de que es como una petición web normal, solo que en vez de trabajar con paginas HTML enteras, se trabaja con intercambio de datos más o menos en crudo.</description>
    </item>
    
    <item>
      <title>Aplicación en Spring REST y Angular – 2 Parte</title>
      <link>http://ww2.profesor-p.com/2018/09/03/aplicacion-en-spring-rest-y-angular-2-parte/</link>
      <pubDate>Mon, 03 Sep 2018 16:22:55 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/09/03/aplicacion-en-spring-rest-y-angular-2-parte/</guid>
      <description>En esta segunda parte voy a empezar a explicar como hacer la parte del servidor, usando, como dije en la primera parte de este articulo utilizare JAVA 8, apoyándome en el framework Spring, versión 5.
Esta aplicación la he realizado con NetBeans 9, usando Tomcat 9 como servidor de aplicaciones. La podía haber realizado usando Spring Boot, lo que habría realizado más fácilmente y con menos configuración pero he querido hacerlo con Tomcat como ejercicio.</description>
    </item>
    
    <item>
      <title>Conectando a una base de datos usando JNDI y Spring en Tomcat</title>
      <link>http://ww2.profesor-p.com/2018/08/21/conectando-con-postgresql-usando-jndi-y-spring-en-tomcat-parte-1/</link>
      <pubDate>Tue, 21 Aug 2018 13:34:56 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/08/21/conectando-con-postgresql-usando-jndi-y-spring-en-tomcat-parte-1/</guid>
      <description>1. Introducción En este ejemplo veremos como conecta a Postgresql usando JPA + Hibernate y Spring JDBC. Para ello uso como servidor de aplicaciones Tomcat. La configuración esta realizada con anotaciones y XML y utilizo el pool de conexiones de Tomcat recogido a través de JNDI, para que la aplicación no deba saber realmente ni donde se conecta.
El código fuente lo teneis en: https://github.com/chuchip/jdbc_jpa_tomcat
En este enlace teneis este mismo documento (todas las partes) pero en PDF.</description>
    </item>
    
  </channel>
</rss>