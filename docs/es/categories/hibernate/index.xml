<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hibernate on Documentacion en español</title>
    <link>http://www.profesor-p.com/es/categories/hibernate/index.html</link>
    <description>Recent content in hibernate on Documentacion en español</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language>
    <lastBuildDate>Fri, 05 Apr 2019 10:54:22 +0000</lastBuildDate>
    <atom:link href="http://www.profesor-p.com/es/categories/hibernate/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Optimizando relaciones entre entidades en Hibernate</title>
      <link>http://www.profesor-p.com/2019/04/05/optimizando-consultas-con-hibernate/index.html</link>
      <pubDate>Fri, 05 Apr 2019 10:54:22 +0000</pubDate>
      <guid>http://www.profesor-p.com/2019/04/05/optimizando-consultas-con-hibernate/index.html</guid>
      <description>En esta entrada, siguiendo el proyecto de ejemplo que teneis en https://github.com/chuchip/jpajoins explicando como optimizar las consultas a la base de datos usando JPA.
Se verán diferentes tipos de consultas, explicando como realizar uniones entre tablas de modo perezoso (lazy) o agresivo (eager). Se unirán tablas por un solo campo, por varios e incluso por uno pero añadiendo una condición estática.
EL proyecto de ejemplo esta desarrollado en Spring Boot con Hibernate, usando como base de datos H2.</description>
    </item>
    <item>
      <title>Querys avanzadas con JPA en Spring Boot</title>
      <link>http://www.profesor-p.com/2019/02/14/querys-avanzadas-con-jpa-en-spring-boot/index.html</link>
      <pubDate>Thu, 14 Feb 2019 15:37:15 +0000</pubDate>
      <guid>http://www.profesor-p.com/2019/02/14/querys-avanzadas-con-jpa-en-spring-boot/index.html</guid>
      <description>Hay veces en que las campos sobre los que restringir una consulta pueden variar en tiempo de ejecución. En ese caso si queremos usar JPA no podemos usar una sentencia @Query definida en nuestro repositorio pues no sabemos los campos sobre los que se aplicaran condiciones en la consulta. Además es bastante común que el usuario pueda elegir el criterio de búsqueda sobre un campo, deseando que el valor de un campo deba ser igual, mayor o menor, respecto al valor introducido .</description>
    </item>
  </channel>
</rss>