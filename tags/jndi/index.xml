<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jndi on Documentacion en español</title>
    <link>http://ww2.profesor-p.com/tags/jndi/</link>
    <description>Recent content in jndi on Documentacion en español</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <lastBuildDate>Mon, 03 Sep 2018 16:22:55 +0000</lastBuildDate>
    
	<atom:link href="http://ww2.profesor-p.com/tags/jndi/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Aplicación en Spring REST y Angular – 2 Parte</title>
      <link>http://ww2.profesor-p.com/2018/09/03/aplicacion-en-spring-rest-y-angular-2-parte/</link>
      <pubDate>Mon, 03 Sep 2018 16:22:55 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/09/03/aplicacion-en-spring-rest-y-angular-2-parte/</guid>
      <description>En esta segunda parte voy a empezar a explicar como hacer la parte del servidor, usando, como dije en la primera parte de este articulo utilizare JAVA 8, apoyándome en el framework Spring, versión 5.
Esta aplicación la he realizado con NetBeans 9, usando Tomcat 9 como servidor de aplicaciones. La podía haber realizado usando Spring Boot, lo que habría realizado más fácilmente y con menos configuración pero he querido hacerlo con Tomcat como ejercicio.</description>
    </item>
    
    <item>
      <title>Conectando a una base de datos usando JNDI y Spring en Tomcat</title>
      <link>http://ww2.profesor-p.com/2018/08/21/conectando-con-postgresql-usando-jndi-y-spring-en-tomcat-parte-1/</link>
      <pubDate>Tue, 21 Aug 2018 13:34:56 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/08/21/conectando-con-postgresql-usando-jndi-y-spring-en-tomcat-parte-1/</guid>
      <description>1. Introducción En este ejemplo veremos como conecta a Postgresql usando JPA + Hibernate y Spring JDBC. Para ello uso como servidor de aplicaciones Tomcat. La configuración esta realizada con anotaciones y XML y utilizo el pool de conexiones de Tomcat recogido a través de JNDI, para que la aplicación no deba saber realmente ni donde se conecta.
El código fuente lo teneis en: https://github.com/chuchip/jdbc_jpa_tomcat
En este enlace teneis este mismo documento (todas las partes) pero en PDF.</description>
    </item>
    
  </channel>
</rss>