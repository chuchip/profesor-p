<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>h2 on Documentacion en español</title>
    <link>http://www.profesor-p.com/tags/h2/</link>
    <description>Recent content in h2 on Documentacion en español</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <lastBuildDate>Fri, 05 Apr 2019 10:54:22 +0000</lastBuildDate>
    
	<atom:link href="http://www.profesor-p.com/tags/h2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Optimizando relaciones entre entidades en Hibernate</title>
      <link>http://www.profesor-p.com/2019/04/05/optimizando-consultas-con-hibernate/</link>
      <pubDate>Fri, 05 Apr 2019 10:54:22 +0000</pubDate>
      
      <guid>http://www.profesor-p.com/2019/04/05/optimizando-consultas-con-hibernate/</guid>
      <description>En esta entrada, siguiendo el proyecto de ejemplo que teneis en https://github.com/chuchip/jpajoins explicando como optimizar las consultas a la base de datos usando JPA.
Se verán diferentes tipos de consultas, explicando como realizar uniones entre tablas de modo perezoso (lazy) o agresivo (eager). Se unirán tablas por un solo campo, por varios e incluso por uno pero añadiendo una condición estática.
EL proyecto de ejemplo esta desarrollado en Spring Boot con Hibernate, usando como base de datos H2.</description>
    </item>
    
  </channel>
</rss>