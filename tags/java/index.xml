<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on Documentacion en espa√±ol</title>
    <link>http://ww2.profesor-p.com/tags/java/</link>
    <description>Recent content in java on Documentacion en espa√±ol</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-ES</language>
    <lastBuildDate>Fri, 02 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://ww2.profesor-p.com/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kotlin vs Java</title>
      <link>http://ww2.profesor-p.com/2018/08/23/kotlin-vs-java/</link>
      <pubDate>Thu, 23 Aug 2018 19:37:38 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/08/23/kotlin-vs-java/</guid>
      <description>&lt;p&gt;Ultimamente se habla mucho de Kotlin, que si Google lo ha marcado como lenguaje preferente en la IO 2017, que si es un lenguaje muy mega-guay para programar en Android, que si soluciona los problemas de Null Pointer Exception.&lt;/p&gt;

&lt;p&gt;En esta entrada voy a dar mi opini√≥n (sin que nadie me pague üòâ ) comparando ambos lenguajes y diciendo, en mi opini√≥n si es tan guay Kotlin, o es mas humo e intereses comerciales.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Aplicaci√≥n CRUD usando REST en JavaEE  (II)</title>
      <link>http://ww2.profesor-p.com/2018/10/07/aplicacion-rest-en-javaee-2a-parte/</link>
      <pubDate>Sun, 07 Oct 2018 05:49:37 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/10/07/aplicacion-rest-en-javaee-2a-parte/</guid>
      <description>&lt;p&gt;En esta ocasi√≥n continuo explicando la aplicaci√≥n CRUD, utilizando peticiones REST, con JavaEE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spring WebFlow con JSP ‚Äì Configuraci√≥n</title>
      <link>http://ww2.profesor-p.com/2018/10/29/spring-webflow-con-jsp-configuracion/</link>
      <pubDate>Mon, 29 Oct 2018 08:49:12 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/10/29/spring-webflow-con-jsp-configuracion/</guid>
      <description>Voy a intentar explicar como funciona Spring WebFlow y para ello, como siempre, lo har√© desarrollando un programa que pod√©is descargar de¬†https://github.com/chuchip/webflowExample
El programa simulara que entras a la p√°gina de un banco donde puedes realizar una transferencia de tus cuentas personales a otra. Para ello, primero deber√°s identificarte y seg√∫n el usuario con el que te identifiques tendr√°s acceso a unas cuentas que a su vez disponen de un saldo establecido.</description>
    </item>
    
    <item>
      <title>Backend I</title>
      <link>http://ww2.profesor-p.com/2018/08/31/aplicacion-en-spring-y-angular/</link>
      <pubDate>Fri, 31 Aug 2018 05:53:48 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/08/31/aplicacion-en-spring-y-angular/</guid>
      <description>En Anjelica, el ERP desarrollado por mi hace unos a√±os, hay un programa que saca un comparativo de ventas, entre dos a√±os, mostrando mes a mes, los kilos, importes y ganancias.
La idea es realizar esta misma consulta pero usando Spring con REST en el backend y como frontend usar Angular.
Para ello se realizaran los siguientes pasos:
 ¬†Crear tablas y cargar datos de prueba en la base de datos.</description>
    </item>
    
    <item>
      <title>Testeando las aplicaciones</title>
      <link>http://ww2.profesor-p.com/2018/08/27/testeando-las-aplicaciones/</link>
      <pubDate>Mon, 27 Aug 2018 08:24:45 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/08/27/testeando-las-aplicaciones/</guid>
      <description>&lt;p&gt;En una pr√≥xima entrada hablare sobre como testear las aplicaciones con pruebas unitarias. Bueno, mostrare como lo hago en mi c√≥digo.&lt;/p&gt;

&lt;p&gt;De momento, viendo que alguien ya la ha hecho antes (y seguramente mejor) dejo este enlace como aperitivo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Uso de perfiles para testear en Spring Boot</title>
      <link>http://ww2.profesor-p.com/2019/03/01/uso-de-perfiles-en-testing-en-spring-boot/</link>
      <pubDate>Fri, 01 Mar 2019 13:50:57 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2019/03/01/uso-de-perfiles-en-testing-en-spring-boot/</guid>
      <description>&lt;p&gt;Como comentaba &lt;a href=&#34;http://ww2.profesor-p.com/2019/02/28/perfiles-en-spring-boot/&#34;&gt;en el articulo anterior&lt;/a&gt; gracias al uso de perfiles es f√°cil personalizar las aplicaciones en &lt;strong&gt;Spring Boot&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Spring WebFlow con JSP</title>
      <link>http://ww2.profesor-p.com/2018/10/30/spring-webflow-con-jsp/</link>
      <pubDate>Tue, 30 Oct 2018 17:12:49 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/10/30/spring-webflow-con-jsp/</guid>
      <description>En el articulo anterior http://www.profesor-p.com/2018/10/29/spring-webflow-con-jsp-configuracion/ explicaba como configurar el programa para que Spring WebFlow funcionara. En este articulo explicare como hacer el flujo en si.
La p√°gina principal del programa no esta dentro de ning√∫n flujo y sus peticiones son respondidas por Spring MVC, en la clase MyController, la cual podemos encontrar en el paquete profesorp.webflow.controller. Esta clase anotada con la etiqueta @Controller responde en la funci√≥n indice1 a las peticiones de los recursos &amp;#8220;/&amp;#8221; e &amp;#8220;index&amp;#8221;</description>
    </item>
    
    <item>
      <title>Backend (II)</title>
      <link>http://ww2.profesor-p.com/2018/09/03/aplicacion-en-spring-rest-y-angular-2-parte/</link>
      <pubDate>Mon, 03 Sep 2018 16:22:55 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/09/03/aplicacion-en-spring-rest-y-angular-2-parte/</guid>
      <description>En esta segunda parte voy a empezar a explicar como hacer la parte del servidor, usando, como dije en la primera parte de este articulo utilizare¬†JAVA 8, apoy√°ndome en el framework Spring, versi√≥n 5.
Esta aplicaci√≥n la he realizado con NetBeans 9, usando Tomcat 9 como servidor de aplicaciones. La pod√≠a haber realizado usando Spring Boot, lo que habr√≠a realizado m√°s f√°cilmente y con menos configuraci√≥n pero he querido hacerlo con Tomcat como ejercicio.</description>
    </item>
    
    <item>
      <title>Desarrollando aplicaciones Java EE en NetBeans 9</title>
      <link>http://ww2.profesor-p.com/2018/09/05/desarrollando-aplicaciones-java-ee-en-netbeans-9/</link>
      <pubDate>Wed, 05 Sep 2018 15:05:08 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/09/05/desarrollando-aplicaciones-java-ee-en-netbeans-9/</guid>
      <description>&lt;p&gt;El reci√©n salido &lt;a href=&#34;https://netbeans.apache.org/download/nb90/nb90.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;NetBeans 9&lt;/a&gt;, es un excelente IDE, con soporte para Java 10 y 11, y con otra serie de caracter√≠sticas muy interesantes. Sin embargo, por temas de licencias con Oracle que es el due√±o del antiguo NetBeans, solo tiene soporte para¬† Java Standard Edition, no pudiendo, en teor√≠a, hacer aplicaciones para Java EE.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Backend  (III)</title>
      <link>http://ww2.profesor-p.com/2018/09/04/aplicacion-en-spring-rest-y-angular-3a-parte/</link>
      <pubDate>Tue, 04 Sep 2018 05:44:12 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/09/04/aplicacion-en-spring-rest-y-angular-3a-parte/</guid>
      <description>En esta entrada, continuare con la parte servidor, que ya comenc√© en el articulo anterior.
Voy a desarrollar la parte donde se responden a las peticiones REST. Para el que no sepa que es eso de REST, pod√©is empezar leyendo este articulo de la wikipedia, pero os podeis quedar con la idea de que es como una petici√≥n web normal, solo que en vez de trabajar con paginas HTML enteras, se trabaja con intercambio de datos m√°s o menos en crudo.</description>
    </item>
    
    <item>
      <title>Backend (IV)</title>
      <link>http://ww2.profesor-p.com/2018/09/05/aplicacion-en-spring-rest-y-angular-4a-parte/</link>
      <pubDate>Wed, 05 Sep 2018 10:16:08 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/09/05/aplicacion-en-spring-rest-y-angular-4a-parte/</guid>
      <description>Continuo con la serie de art√≠culos explicando una aplicaci√≥n donde la parte de servidor esta creada con Java, apoy√°ndose en el framework Spring y la parte del cliente usara Angular. Para la comunicaci√≥n entre la aplicaci√≥n usare peticiones REST, por supuesto utilizando el protocolo JSON.
En la anterior entrada¬†empece a explicar como se desplegar√≠a la aplicaci√≥n y en que URLs se procesar√≠an las diferentes peticiones. Ahora explicare como funcionan las diferentes peticiones.</description>
    </item>
    
    <item>
      <title>Perfiles en Spring Boot</title>
      <link>http://ww2.profesor-p.com/2019/02/28/perfiles-en-spring-boot/</link>
      <pubDate>Thu, 28 Feb 2019 11:52:51 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2019/02/28/perfiles-en-spring-boot/</guid>
      <description>&lt;p&gt;Cuando se hacen aplicaciones empresariales, lo normal es que, como m√≠nimo, primero se desplieguen en un entorno de pruebas y despu√©s¬† en el entorno de producci√≥n. Cada entorno de pruebas tendr√° diferentes bases de datos, diferentes URLs y toda una serie de par√°metros espec√≠ficos, con el fin de que una aplicaci√≥n en desarrollo no acceda nunca a datos reales.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>La clase RestTemplate</title>
      <link>http://ww2.profesor-p.com/2019/08/03/trabajando-con-la-clase-resttemplate/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2019/08/03/trabajando-con-la-clase-resttemplate/</guid>
      <description>Este ser√° el primero de una serie de entradas sobre la clase RestTemplate de Spring.
Con los diferentes m√©todos de la clase se realizan peticiones HTTP f√°cilmente, produci√©ndose la serializaci√≥n y deserializaci√≥n de los objetos de una manera transparente. Es una gran alternativa dada por Spring sobre otras librer√≠as ya existentes en el mercado.
Como siempre ten√©is el proyecto sobre el que esta basado este art√≠culo en: https://github.com/chuchip/RestTemplateExample
RestTemplate esta en el core de Spring por lo cual no es necesario instalar ninguna dependencia.</description>
    </item>
    
    <item>
      <title>Estableciendo filtros en Spring</title>
      <link>http://ww2.profesor-p.com/2019/06/13/estableciendo-filtros-en-spring/</link>
      <pubDate>Thu, 13 Jun 2019 16:11:53 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2019/06/13/estableciendo-filtros-en-spring/</guid>
      <description>En esta entrada voy a hablar de como implementar filtros en Spring. Los filtros son de los que se pueden establecer cuando se recibe una petici√≥n HTTP. Es decir, suponiendo que tenemos un programa escuchando en unas URI, poder especificar que deseamos ejecutar algo antes de que las peticiones sea procesadas por el controlador.
Esto es muy √∫til si queremos que todas las peticiones cumplan un requisito, por ejemplo incluir una cabecera especifica.</description>
    </item>
    
    <item>
      <title>Cacheando resultados con Spring Boot</title>
      <link>http://ww2.profesor-p.com/2019/05/12/cacheando-datos-en-spring-boot/</link>
      <pubDate>Sun, 12 May 2019 07:57:07 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2019/05/12/cacheando-datos-en-spring-boot/</guid>
      <description>Vamos a imaginar una aplicaci√≥n web, donde por cada petici√≥n recibida, debe leer ciertos datos de configuraci√≥n desde una base de datos. Esos datos no cambiaran normalmente pero nuestra aplicaci√≥n, en cada petici√≥n, debe conectarse, ejecutar las sentencias adecuadas para leer los datos, traerlos por la red, etc. Imaginemos, adem√°s, que la base de datos a la que nos conectamos esta saturada o la conexi√≥n de red que nos une a la base de datos es inestable.</description>
    </item>
    
    <item>
      <title>Optimizando relaciones entre entidades en Hibernate</title>
      <link>http://ww2.profesor-p.com/2019/04/05/optimizando-consultas-con-hibernate/</link>
      <pubDate>Fri, 05 Apr 2019 10:54:22 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2019/04/05/optimizando-consultas-con-hibernate/</guid>
      <description>En esta entrada, siguiendo el proyecto de ejemplo que teneis en¬†https://github.com/chuchip/jpajoins explicando como optimizar¬†las consultas a la base de datos usando JPA.
Se ver√°n diferentes tipos de consultas, explicando como realizar uniones entre tablas de modo perezoso (lazy) o agresivo (eager). Se unir√°n tablas por un solo campo, por varios e incluso por uno pero a√±adiendo una condici√≥n est√°tica.
EL proyecto de ejemplo esta desarrollado en Spring Boot con Hibernate, usando como base de datos H2.</description>
    </item>
    
    <item>
      <title>Accediendo facilmente a los datos con Spring Rest Data</title>
      <link>http://ww2.profesor-p.com/2019/03/25/accediendo-facilmente-a-los-datos-con-spring-rest-data/</link>
      <pubDate>Mon, 25 Mar 2019 16:02:14 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2019/03/25/accediendo-facilmente-a-los-datos-con-spring-rest-data/</guid>
      <description>Spring Boot ofrece un fant√°stico soporte para acceder a los datos con JPA a trav√©s de sus interfaces, del tipo Repository. Si a esto le a√±adimos la facilidad con que se crean servicios REST, como explicaba en la entrada [http://www.profesor-p.com/2018/10/11/aplicacion-crud-en-kotlin-con-springboot/][2] podremos hacer una aplicaci√≥n ofreciendo una API para acceder a nuestra base de datos preferida muy facilmente.
Pero si queremos implementar HATEOAS en nuestro proyecto o si hay muchos criterios sobre los que debemos acceder a los datos, deberemos escribir bastante c√≥digo.</description>
    </item>
    
    <item>
      <title>Usando Zuul para redirigir peticiones REST</title>
      <link>http://ww2.profesor-p.com/2019/03/16/zuul-para-redirigir-peticiones-rest-en-spring-boot/</link>
      <pubDate>Sat, 16 Mar 2019 07:19:41 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2019/03/16/zuul-para-redirigir-peticiones-rest-en-spring-boot/</guid>
      <description>En este articulo explicare como crear una pasarela para peticiones REST (una gateway) utilizando Zuul.
Zuul es parte del paquete Spring Cloud NetFlix y permite redirigir peticiones REST, realizando diversos tipos de filtros.
En casi cualquier proyecto donde haya microservicios, es deseable que todas las comunicaciones entre esos microservicios pasen por un lugar com√∫n, de tal manera que se registren las entradas y salidas, se pueda implementar seguridad o se puedan redirigir las peticiones dependiendo de diversos par√°metros.</description>
    </item>
    
    <item>
      <title>Querys avanzadas con JPA en Spring Boot</title>
      <link>http://ww2.profesor-p.com/2019/02/14/querys-avanzadas-con-jpa-en-spring-boot/</link>
      <pubDate>Thu, 14 Feb 2019 15:37:15 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2019/02/14/querys-avanzadas-con-jpa-en-spring-boot/</guid>
      <description>Hay veces en que las campos sobre los que restringir una consulta pueden variar en tiempo de ejecuci√≥n. En ese caso si queremos usar JPA no podemos usar una sentencia @Query definida en nuestro repositorio pues no sabemos los campos sobre los que se aplicaran condiciones en la consulta. Adem√°s es bastante com√∫n que el usuario pueda elegir el criterio de b√∫squeda sobre un campo, deseando que el valor de un campo deba ser igual, mayor o menor, respecto al valor introducido .</description>
    </item>
    
    <item>
      <title>Mensajer√≠a con Kafka y Spring Boot</title>
      <link>http://ww2.profesor-p.com/2019/01/24/mensajeria-con-kafka-y-spring-boot/</link>
      <pubDate>Thu, 24 Jan 2019 15:31:06 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2019/01/24/mensajeria-con-kafka-y-spring-boot/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Kafka&lt;/strong&gt; es un programa de mensajer√≠a pensado para comunicaciones as√≠ncronas. B√°sicamente la idea es que los clientes o &lt;strong&gt;consumidores&lt;/strong&gt; se subscriben a un tipo de noticia o &lt;strong&gt;topic&lt;/strong&gt; y cuando un emisor o &lt;strong&gt;broker&lt;/strong&gt; manda un mensaje sobre ese &lt;strong&gt;topic&lt;/strong&gt; Kafka lo distribuye a los &lt;strong&gt;consumidores&lt;/strong&gt; suscritos.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Microservicios distribuidos con Eureka</title>
      <link>http://ww2.profesor-p.com/2019/01/03/microservicios-distribuidos-con-eureka/</link>
      <pubDate>Thu, 03 Jan 2019 08:52:59 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2019/01/03/microservicios-distribuidos-con-eureka/</guid>
      <description>En esta clase hablare de como crear microservicios distribuidos en Spring Boot utilizando las facilidades que nos da el paquete Spring Cloud NetFlix.
Cualquier microservicio debe poder localizar las diferentes instancias de otro servicio del que dependa sin tener sus direcciones definidas en el c√≥digo.
En el caso de que un microservicio deba acceder a otro lo ideal seria que de alguna manera pudiera saber en que direcciones esta las instancias de ese otro microservicio funcionando, pues lo m√°s com√∫n es que se levanten diferentes instancias dependiendo de la carga.</description>
    </item>
    
    <item>
      <title>Servidor configuraciones usando Spring Cloud</title>
      <link>http://ww2.profesor-p.com/2018/12/10/servidor-configuraciones-usando-spring-cloud/</link>
      <pubDate>Mon, 10 Dec 2018 14:56:56 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/12/10/servidor-configuraciones-usando-spring-cloud/</guid>
      <description>En esta ocasi√≥n vamos a usar el paquete Spring Cloud Config para poder tener configuraciones remotas para nuestras aplicaciones.
La idea es que nuestro programa o programas puedan ir a buscar sus par√°metros de configuraci√≥n a un lugar externo, de tal manera que nuestra aplicaci√≥n sea f√°cilmente parametrizable e incluso se puedan cambiar sus configuraciones en caliente.
Esto se utiliza ampliamente en microservicios pues una mismo servicio o aplicaci√≥n puede estar lanzada muchas veces en diferentes contenedores y es interesante tener un lugar central desde donde se puedan aplicar las configuraciones a estos servicios.</description>
    </item>
    
    <item>
      <title>Personalizar salidas de c√≥digos HTTP en Spring Boot</title>
      <link>http://ww2.profesor-p.com/2018/11/20/personalizar-codigo-http-en-spring-boot/</link>
      <pubDate>Tue, 20 Nov 2018 17:46:55 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/11/20/personalizar-codigo-http-en-spring-boot/</guid>
      <description>En esta articulo os voy a explicar como devolver errores HTTP personalizados. Para ello crearemos un proyecto llamado httpErrorPersonalizado. Teneis el c√≥digo fuente de este proyecto en mi p√°gina de¬†GitHub
Cuando realizamos una petici√≥n HTTP a un recurso en Spring Boot, es com√∫n que esa petici√≥n tenga que considerar la opci√≥n de devolver un error.
Es el caso t√≠pico de que realizamos una petici√≥n RESTful para solicitar un registro, pero ese registro no existe.</description>
    </item>
    
    <item>
      <title>Securizando servicios REST con Oauth2 en SpringBoot</title>
      <link>http://ww2.profesor-p.com/2018/10/18/securizando-servicios-rest-con-oauth2-en-springboot/</link>
      <pubDate>Thu, 18 Oct 2018 13:20:43 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/10/18/securizando-servicios-rest-con-oauth2-en-springboot/</guid>
      <description>En esta entrada explicare como podemos dotar de seguridad a servicios REST en Spring Boot. La aplicaci√≥n de ejemplo es la misma que la entrada de seguridad WEB anterior, as√≠ que el c√≥digo fuente lo ten√©is en: https://github.com/chuchip/OAuthServer.
Explicando la tecnologia Oauth2 Como he dicho, utilizaremos el protocolo OAuth2, as√≠ que lo primero sera explicar como funciona este protocolo.
OAuth2 tiene algunas variantes pero yo os voy a explicar la que utilizare en el programa y,¬†para ello, voy a poneros un ejemplo para que entend√°is lo que pretendemos hacer.</description>
    </item>
    
    <item>
      <title>Seguridad WEB en Spring Boot</title>
      <link>http://ww2.profesor-p.com/2018/10/17/seguridad-web-en-spring-boot/</link>
      <pubDate>Wed, 17 Oct 2018 10:19:34 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/10/17/seguridad-web-en-spring-boot/</guid>
      <description>En esta entrada voy a explicar¬†como gestiona Spring la seguridad. No todo, por supuesto, que el tema de la seguridad dar√≠a para un libro muy gordote, pero al menos aprender a securizar una pagina web. En una pr√≥xima entrada hablare de como securizar un servicio REST.
Como siempre, comienzo diciendo que el c√≥digo fuente de lo que explico lo ten√©is en mi pagina de GITHUB, en https://github.com/chuchip/OAuthServer. El programa esta realizado en Java, usando Spring Boot.</description>
    </item>
    
    <item>
      <title>Ejemplo aplicaci√≥n MVC con Spring Boot  usando NetBeans 9</title>
      <link>http://ww2.profesor-p.com/2018/08/28/ejemplo-aplicacion-mvc-con-spring-boot-usando-netbeans-9/</link>
      <pubDate>Tue, 28 Aug 2018 06:51:33 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/08/28/ejemplo-aplicacion-mvc-con-spring-boot-usando-netbeans-9/</guid>
      <description>En una entrada anterior explique como instalar NetBeans 9, a√±adiendole el plugin para usar Spring Boot.
Ahora vamos a crear nuestro primer proyecto en este entorno.
Pulsaremos New Project, lo cual nos mostrara una pantalla como la siguiente.
y en el campo Filter pondremos spring,¬† para despu√©s eligir Spring Boot Inititilizr project. Pulsaremos Next y nos pedir√°¬†una serie de datos sobre¬†nuestro proyecto. Para este ejemplo podemos dejar los campos como aparecen por defecto.</description>
    </item>
    
    <item>
      <title>Instalar plugin Spring Boot en NetBeans</title>
      <link>http://ww2.profesor-p.com/2018/08/27/instalar-plugin-spring-boot-con-netbeans-9-en-ubuntu-18-04/</link>
      <pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/08/27/instalar-plugin-spring-boot-con-netbeans-9-en-ubuntu-18-04/</guid>
      <description>&lt;p&gt;En esta entrada explicare como crear un aplicaci√≥n con el framework Spring Boot, usando el IDE NetBeans 9.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Usando Lambdas</title>
      <link>http://ww2.profesor-p.com/2018/08/23/usando-lambdas/</link>
      <pubDate>Thu, 23 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/08/23/usando-lambdas/</guid>
      <description>&lt;p&gt;En esta breve entrada explicare como mejorar el &lt;a href=&#34;http://ww2.profesor-p.com/2018/08/22/acceso-a-base-de-datos-con-jdbc-spring/&#34;&gt;ejemplo anterior&lt;/a&gt;, con el uso de lambdas.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Acceso a Base de Datos con  Spring Data JDBC</title>
      <link>http://ww2.profesor-p.com/2018/08/22/acceso-a-base-de-datos-con-jdbc-spring/</link>
      <pubDate>Wed, 22 Aug 2018 15:39:57 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/08/22/acceso-a-base-de-datos-con-jdbc-spring/</guid>
      <description>En el anterior articulo explicaba como crear la conexion a la base de datos en un servidor de aplicaciones Tomcat . En este articulo explicare como acceder a esos datos a traves del paquete JDBC de Spring Data JDBC
El c√≥digo fuente de este ejemplo esta en: https://github.com/chuchip/jdbc_jpa_tomcat
Creando nuestro POJO y Repositorio Ahora que ya tenemos nuestro acceso a la base de datos configurado y disponible, vamos a utilizarlo (por eso de que no se aburra üòâ )</description>
    </item>
    
    <item>
      <title>Conectando a una base de datos usando JNDI y Spring en Tomcat</title>
      <link>http://ww2.profesor-p.com/2018/08/21/conectando-con-postgresql-usando-jndi-y-spring-en-tomcat-parte-1/</link>
      <pubDate>Tue, 21 Aug 2018 13:34:56 +0000</pubDate>
      
      <guid>http://ww2.profesor-p.com/2018/08/21/conectando-con-postgresql-usando-jndi-y-spring-en-tomcat-parte-1/</guid>
      <description>&lt;p&gt;En este ejemplo veremos como conecta a Postgresql usando JPA + Hibernate y Spring JDBC. Para ello uso como servidor de aplicaciones Tomcat. La configuraci√≥n esta realizada con anotaciones y XML y utilizo el pool de conexiones de Tomcat recogido a trav√©s de JNDI, para que la aplicaci√≥n no deba saber realmente ni donde se conecta.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>